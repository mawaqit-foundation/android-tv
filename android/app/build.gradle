buildscript {
    repositories {
        // ...
        maven { url 'https://plugins.gradle.org/m2/' } // Gradle Plugin Portal
        mavenCentral()
        gradlePluginPortal()
    }
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '116'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.12'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
// FIREBASE PACKAGES
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
  keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33
    ndkVersion "25.2.9519653"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.kanout.mawaqit"
        minSdkVersion 19
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        // FIREBASE PACKAGES
        multiDexEnabled true
    }

    signingConfigs {
        release {
          keyAlias keystoreProperties != null ? keystoreProperties['keyAlias'] : null
          keyPassword keystoreProperties != null ? keystoreProperties['keyPassword'] : null
          storePassword keystoreProperties != null ? keystoreProperties['storePassword'] : null
          storeFile keystoreProperties != null && keystoreProperties['storeFile'] != null ? file(keystoreProperties['storeFile']) : null
        }
//        debug {
//            storeFile file(storeFile_)
//            storePassword storePassword_
//            keyAlias keyAlias_
//            keyPassword keyPassword_
//        }
    }

    buildTypes {
      release {
        signingConfig signingConfigs.release
      }
    }


}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // FIREBASE PACKAGES
    implementation 'com.android.support:multidex:1.0.3'

  implementation platform('com.google.firebase:firebase-bom:29.1.0')
  implementation 'com.google.firebase:firebase-analytics-ktx'

  implementation 'androidx.legacy:legacy-support-v13:1.0.0'
  implementation 'androidx.leanback:leanback:1.0.0'
}

